name: CI

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      CI: true
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Cache turbo
        uses: actions/cache@v4
        with:
          path: |
            .turbo
          key: ${{ runner.os }}-turbo-${{ hashFiles('**/package-lock.json', 'turbo.json') }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Apply database migrations (Drizzle)
        run: npm run -w packages/db db:push

      - name: Typecheck
        run: npm run typecheck

      - name: Lint (fail on warnings)
        run: npm run lint -- -- --max-warnings=0

      - name: Build
        run: npm run build

      - name: Test
        run: npm test --silent
